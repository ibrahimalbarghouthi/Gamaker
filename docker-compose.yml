version: "3.9"  # optional since v1.27.0
services:
  postgres_rest:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://octowink_auth_admin:root@postgres:5432/postgres
      PGRST_DB_SCHEMA: auth
      PGRST_DB_ANON_ROLE: octowink_auth_admin #In production this role should not be the same as the one used for the connection
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000
    depends_on:
      - postgres

  postgres:
    image: bitnami/postgresql:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
      - ./init_postgres.sql:/docker-entrypoint-initdb.d/init.sql

  auth:
    image: octowink/gotrue:latest
    # build: .
    env_file:
      - dev.env
    ports:
      - "9999:9999"
    expose:
      - "9999"
    depends_on:
      - postgres

  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui:latest
    ports:
      - "8020:8080"
    environment:
      - API_URL=http://localhost:3000/
    restart: always


  kong:
    image: 'bitnami/kong:latest'
    ports:
      - '8000:8000'
      - '8001:8001'
    environment:
      # Assume we don't want data persistence for simplicity purposes
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/opt/bitnami/kong/conf/kong.yml
    volumes:
      - ./kong.yml:/opt/bitnami/kong/conf/kong.yml

  orchestrator:
    image: octowink/orchestrator:latest
    ports:
      - "9090:9090"

  prometheus:
    image: bitnami/prometheus:latest
    volumes:
      - ./prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
      - 'prometheus_data:/opt/bitnami/prometheus/data'

  grafana:
    image: bitnami/grafana:latest
    ports:
      - "3300:3300"
    volumes:
      - ./grafana.ini:/opt/bitnami/grafana/conf/grafana.ini
      - 'grafana_data:/opt/bitnami/grafana/data'


volumes:
  grafana_data:
    driver: local
  prometheus_data:
    driver: local
  postgresql_data:
    driver: local
